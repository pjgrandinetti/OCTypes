name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'  # e.g. v1.2.3

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Build library (Linux/macOS)
        if: runner.os != 'Windows'
        run: make

      # Windows-specific setup
      - name: Set up MSYS2 and MinGW
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            make
            flex
            bison

      - name: Build library (Windows)
        if: runner.os == 'Windows'
        shell: msys2 {0}
        run: |
          make clean
          make CC=gcc CFLAGS="-std=c99 -I . -I src -O3 -Wall -Wextra -Wno-sign-compare -Wno-unused-parameter -Wno-missing-field-initializers" LEX=flex YACC="bison -y"

      - name: Package library
        run: |
          mkdir -p artifacts
          cp libOCTypes.a artifacts/libOCTypes-${{ matrix.os }}.a
          zip -j artifacts/libOCTypes-${{ matrix.os }}.zip artifacts/libOCTypes-${{ matrix.os }}.a

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: libOCTypes-${{ matrix.os }}
          path: artifacts/libOCTypes-${{ matrix.os }}.zip

  headers:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Package headers
        run: |
          mkdir -p artifacts/include
          cp src/*.h artifacts/include/
          zip -j artifacts/libOCTypes-headers.zip artifacts/include/*.h

      - name: Upload headers artifact
        uses: actions/upload-artifact@v4
        with:
          name: libOCTypes-headers
          path: artifacts/libOCTypes-headers.zip

  release:
    needs: [build, headers]
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload all assets
        run: |
          for file in artifacts/**/*.zip; do
            echo "Uploading $file"
            gh release upload "${{ github.ref_name }}" "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
