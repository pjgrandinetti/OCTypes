/**
 * @file OCIndexPairSet.h
 * @brief Public interface for OCIndexPairSet and OCMutableIndexPairSet types.
 *
 * Provides creation, manipulation, and serialization of sets of (index, value) pairs.
 * Each pair is represented by an OCIndexPair structure and stored internally as contiguous OCData.
 */

#ifndef OCINDEXPAIRSET_H
#define OCINDEXPAIRSET_H

#include "OCLibrary.h"
#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @struct OCIndexPair
 * @brief Represents a simple (index, value) pair.
 */
typedef struct OCIndexPair {
    OCIndex index; /**< The index component of the pair */
    OCIndex value; /**< The associated value */
} OCIndexPair;

/**
 * @brief Returns the unique type ID for OCIndexPairSet.
 */
OCTypeID OCIndexPairSetGetTypeID(void);

/**
 * @brief Creates an empty immutable OCIndexPairSet.
 */
OCIndexPairSetRef OCIndexPairSetCreate(void);

/**
 * @brief Creates an empty mutable OCIndexPairSet.
 */
OCMutableIndexPairSetRef OCIndexPairSetCreateMutable(void);

/**
 * @brief Returns an immutable deep copy of the given index pair set.
 */
OCIndexPairSetRef OCIndexPairSetCreateCopy(OCIndexPairSetRef source);

/**
 * @brief Returns a mutable deep copy of the given index pair set.
 */
OCMutableIndexPairSetRef OCIndexPairSetCreateMutableCopy(OCIndexPairSetRef source);

/**
 * @brief Creates a mutable index pair set from a flat array of values.
 * @details The index is derived from the array index.
 */
OCMutableIndexPairSetRef OCIndexPairSetCreateMutableWithIndexArray(OCIndexArrayRef indexArray);

/**
 * @brief Creates an immutable set from an array of index pairs.
 *
 * @param array Pointer to array of OCIndexPair.
 * @param count Number of elements in the array.
 */
OCIndexPairSetRef OCIndexPairSetCreateWithIndexPairArray(OCIndexPair *array, int count);

/**
 * @brief Creates an immutable set with one index-value pair.
 */
OCIndexPairSetRef OCIndexPairSetCreateWithIndexPair(OCIndex index, OCIndex value);

/**
 * @brief Creates an immutable set with two index-value pairs.
 */
OCIndexPairSetRef OCIndexPairSetCreateWithTwoIndexPairs(OCIndex index1, OCIndex value1, OCIndex index2, OCIndex value2);

/**
 * @brief Returns the backing OCDataRef holding all index pairs.
 */
OCDataRef OCIndexPairSetGetIndexPairs(OCIndexPairSetRef set);

/**
 * @brief Returns the number of index pairs in the set.
 */
OCIndex OCIndexPairSetGetCount(OCIndexPairSetRef set);

/**
 * @brief Returns a pointer to the index pair array (internal representation).
 */
OCIndexPair *OCIndexPairSetGetBytePtr(OCIndexPairSetRef set);

/**
 * @brief Retrieves the value associated with a given index, or kOCNotFound.
 */
OCIndex OCIndexPairSetValueForIndex(OCIndexPairSetRef set, OCIndex index);

/**
 * @brief Returns an array of all values in the index pair set.
 */
OCIndexArrayRef OCIndexPairSetCreateIndexArrayOfValues(OCIndexPairSetRef set);

/**
 * @brief Returns a set of all indexes in the index pair set.
 */
OCIndexSetRef OCIndexPairSetCreateIndexSetOfIndexes(OCIndexPairSetRef set);

/**
 * @brief Returns the first index-value pair in the set.
 */
OCIndexPair OCIndexPairSetFirstIndex(OCIndexPairSetRef set);

/**
 * @brief Returns the last index-value pair in the set.
 */
OCIndexPair OCIndexPairSetLastIndex(OCIndexPairSetRef set);

/**
 * @brief Returns the index pair with index less than the input pair's index.
 */
OCIndexPair OCIndexPairSetIndexPairLessThanIndexPair(OCIndexPairSetRef set, OCIndexPair target);

/**
 * @brief Returns true if the set contains the given index.
 */
bool OCIndexPairSetContainsIndex(OCIndexPairSetRef set, OCIndex index);

/**
 * @brief Returns true if the set contains the given index-value pair.
 */
bool OCIndexPairSetContainsIndexPair(OCIndexPairSetRef set, OCIndexPair pair);

/**
 * @brief Adds a new index-value pair if index does not already exist.
 */
bool OCIndexPairSetAddIndexPair(OCMutableIndexPairSetRef set, OCIndex index, OCIndex value);

/**
 * @brief Removes a pair with the given index, if present.
 */
bool OCIndexPairSetRemoveIndexPairWithIndex(OCMutableIndexPairSetRef set, OCIndex index);

/**
 * @brief Converts the set into a dictionary suitable for plist serialization.
 */
OCDictionaryRef OCIndexPairSetCreatePList(OCIndexPairSetRef set);

/**
 * @brief Creates a set from a dictionary generated by OCIndexPairSetCreatePList.
 */
OCIndexPairSetRef OCIndexPairSetCreateWithPList(OCDictionaryRef dict);

/**
 * @brief Returns a data object representing the internal state.
 */
OCDataRef OCIndexPairSetCreateData(OCIndexPairSetRef set);

/**
 * @brief Creates a set using the given OCDataRef.
 */
OCIndexPairSetRef OCIndexPairSetCreateWithData(OCDataRef data);

/**
 * @brief Displays the contents of the index pair set to stderr.
 */
void OCIndexPairSetShow(OCIndexPairSetRef set);

#ifdef __cplusplus
}
#endif

#endif /* OCINDEXPAIRSET_H */

