<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_o_c_type_8c" kind="file" language="C++">
    <compoundname>OCType.c</compoundname>
    <includes refid="_o_c_library_8h" local="yes">OCLibrary.h</includes>
    <incdepgraph>
      <node id="31">
        <label>OCArray.h</label>
        <link refid="_o_c_array_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>OCAutoreleasePool.h</label>
        <link refid="_o_c_autorelease_pool_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>OCBoolean.h</label>
        <link refid="_o_c_boolean_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>OCData.h</label>
        <link refid="_o_c_data_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>OCDictionary.h</label>
        <link refid="_o_c_dictionary_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>OCLibrary.h</label>
        <link refid="_o_c_library_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>OCMath.h</label>
        <link refid="_o_c_math_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>OCNumber.h</label>
        <link refid="_o_c_number_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>OCString.h</label>
        <link refid="_o_c_string_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/OCType.c</label>
        <link refid="_o_c_type_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>OCType.h</label>
        <link refid="_o_c_type_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>complex.h</label>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="7">
        <label>errno.h</label>
      </node>
      <node id="8">
        <label>float.h</label>
      </node>
      <node id="20">
        <label>inttypes.h</label>
      </node>
      <node id="9">
        <label>limits.h</label>
      </node>
      <node id="10">
        <label>locale.h</label>
      </node>
      <node id="11">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>setjmp.h</label>
      </node>
      <node id="14">
        <label>signal.h</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="21">
        <label>stdbool.h</label>
      </node>
      <node id="15">
        <label>stddef.h</label>
      </node>
      <node id="22">
        <label>stdint.h</label>
      </node>
      <node id="16">
        <label>stdio.h</label>
      </node>
      <node id="17">
        <label>stdlib.h</label>
      </node>
      <node id="18">
        <label>string.h</label>
      </node>
      <node id="3">
        <label>sys/types.h</label>
      </node>
      <node id="19">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_____o_c_type" prot="public">__OCType</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" prot="public" static="yes" mutable="no">
        <type>char **</type>
        <definition>char** typeIDTable</definition>
        <argsstring></argsstring>
        <name>typeIDTable</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCType.c" line="10" column="13" bodyfile="src/OCType.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" prot="public" static="yes" mutable="no">
        <type><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref></type>
        <definition>OCTypeID typeIDTableCount</definition>
        <argsstring></argsstring>
        <name>typeIDTableCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCType.c" line="11" column="17" bodyfile="src/OCType.c" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kind="function"><name>OCTypeEqual</name></member>
      <member refid="group___o_c_type_1gaf0ec7b8c3f8096a2c8fa560c10a136bf" kind="function"><name>OCRegisterType</name></member>
      <member refid="group___o_c_type_1ga2b6e5ce9f5cbfbb459569f2188c445b8" kind="function"><name>OCRelease</name></member>
      <member refid="group___o_c_type_1ga3a27a5361c9635b95b63a833ea378b91" kind="function"><name>OCRetain</name></member>
      <member refid="group___o_c_type_1ga59cd1c60d2487296ea3032c4de8adc0e" kind="function"><name>OCTypeCopyFormattingDesc</name></member>
      <member refid="group___o_c_type_1ga1935a8db7fe65f4b4801431a6bc4138b" kind="function"><name>OCCopyDescription</name></member>
      <member refid="group___o_c_type_1ga96a3a96939e2701c7df9bc30eaa1a2df" kind="function"><name>OCGetTypeID</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OCType.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OCTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Philip<sp/>on<sp/>11/18/12.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_c_library_8h" kindref="compound">OCLibrary.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="struct_____o_c_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_type" kindref="compound">__OCType</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga66b90fed8dd532198f1a04d294dbaa69" kindref="member">OCBase</ref><sp/><ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal">};</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Compares<sp/>two<sp/>OCType<sp/>objects<sp/>for<sp/>equality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>theType1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>theType2)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>either<sp/>pointer<sp/>is<sp/>NULL<sp/>or<sp/>if<sp/>they<sp/>are<sp/>the<sp/>same<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>theType1<sp/>||<sp/>NULL<sp/>==<sp/>theType2)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theType1<sp/>==<sp/>theType2)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>typeRef1<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)theType1;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>typeRef2<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)theType2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>type<sp/>IDs<sp/>are<sp/>valid<sp/>and<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeRef1-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>==<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref><sp/>||</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeRef2-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>==<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref><sp/>||</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeRef1-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>!=<sp/>typeRef2-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>the<sp/>custom<sp/>equality<sp/>function<sp/>if<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>typeRef1-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a3b4bd801666626087c490a016c8353d9" kindref="member">equal</ref>)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>typeRef1-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a3b4bd801666626087c490a016c8353d9" kindref="member">equal</ref>(theType1,<sp/>theType2);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Registers<sp/>a<sp/>new<sp/>type<sp/>and<sp/>returns<sp/>its<sp/>unique<sp/>type<sp/>ID.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/><ref refid="group___o_c_type_1gaf0ec7b8c3f8096a2c8fa560c10a136bf" kindref="member">OCRegisterType</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*typeName)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>invalid<sp/>type<sp/>ID<sp/>if<sp/>typeName<sp/>is<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>typeName)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>type<sp/>ID<sp/>table<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>been<sp/>created<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/><ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref><sp/>=<sp/>malloc(256<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/><ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>type<sp/>name<sp/>is<sp/>already<sp/>registered.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint32_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(<ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[index],<sp/>typeName)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>new<sp/>type<sp/>if<sp/>there<sp/>is<sp/>space<sp/>available.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref><sp/>&lt;<sp/>256)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[<ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>]<sp/>=<sp/>malloc(strlen(typeName)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/><ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[<ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>])<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(<ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[<ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>],<sp/>typeName);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>++;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Decrements<sp/>the<sp/>reference<sp/>count<sp/>of<sp/>an<sp/>object<sp/>and<sp/>finalizes<sp/>it<sp/>if<sp/>the<sp/>count<sp/>reaches<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ga2b6e5ce9f5cbfbb459569f2188c445b8" kindref="member">OCRelease</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>ptr;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theType)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>the<sp/>retain<sp/>count<sp/>and<sp/>finalize<sp/>if<sp/>it<sp/>reaches<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1aa2182da1dc0de45f16e782f94bb43cb7" kindref="member">finalize</ref>(theType);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref>--;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increments<sp/>the<sp/>reference<sp/>count<sp/>of<sp/>an<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group___o_c_type_1ga3a27a5361c9635b95b63a833ea378b91" kindref="member">OCRetain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>ptr;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theType)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>retain<sp/>count<sp/>if<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theType;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref>++;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theType;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>formatted<sp/>description<sp/>of<sp/>the<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref><sp/><ref refid="group___o_c_type_1ga59cd1c60d2487296ea3032c4de8adc0e" kindref="member">OCTypeCopyFormattingDesc</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>ptr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>ptr;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a658977341e9751990f8d323f49d9fbaf" kindref="member">copyFormattingDesc</ref>(theType);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>string<sp/>description<sp/>of<sp/>the<sp/>object&apos;s<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref><sp/><ref refid="group___o_c_type_1ga1935a8db7fe65f4b4801431a6bc4138b" kindref="member">OCCopyDescription</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr)</highlight></codeline>
<codeline lineno="126"><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_string_1gad734b63b237b545928dc873cdc716fc9" kindref="member">OCStringCreateWithCString</ref>(</highlight><highlight class="stringliteral">&quot;NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>ptr;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/>currentTypeID<sp/>=<sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>the<sp/>type<sp/>ID<sp/>and<sp/>return<sp/>the<sp/>corresponding<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentTypeID<sp/>==<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref><sp/>||<sp/>currentTypeID<sp/>&gt;<sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_string_1gad734b63b237b545928dc873cdc716fc9" kindref="member">OCStringCreateWithCString</ref>(</highlight><highlight class="stringliteral">&quot;UnknownType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[currentTypeID<sp/>-<sp/>1]<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_string_1gad734b63b237b545928dc873cdc716fc9" kindref="member">OCStringCreateWithCString</ref>(</highlight><highlight class="stringliteral">&quot;UnnamedType&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_string_1gad734b63b237b545928dc873cdc716fc9" kindref="member">OCStringCreateWithCString</ref>(<ref refid="_o_c_type_8c_1aebf973ea05d7cced2af05aba140b5e10" kindref="member">typeIDTable</ref>[currentTypeID<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>type<sp/>ID<sp/>of<sp/>the<sp/>given<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/><ref refid="group___o_c_type_1ga96a3a96939e2701c7df9bc30eaa1a2df" kindref="member">OCGetTypeID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>ptr)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ptr)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>ptr;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>==<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref><sp/>||<sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>&gt;<sp/><ref refid="_o_c_type_8c_1a0e6288b7945a62b143bc4c23631795a2" kindref="member">typeIDTableCount</ref>)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theType-&gt;<ref refid="struct_____o_c_type_1a726d7659e0d8384c579b3319e11b8765" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/OCType.c"/>
  </compounddef>
</doxygen>
