<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___o_c_boolean" kind="group">
    <compoundname>OCBoolean</compoundname>
    <title>OCBoolean</title>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" prot="public" static="no">
        <type>const struct <ref refid="struct_____o_c_boolean" kindref="compound">__OCBoolean</ref> *</type>
        <definition>typedef const struct __OCBoolean* OCBooleanRef</definition>
        <argsstring></argsstring>
        <name>OCBooleanRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>.. _OCBoolean_h:</para>
<sect1 id="group___o_c_boolean_1autotoc_md0">
<title>OCBoolean.h</title><para>Defines the <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> type and related functions for representing Boolean values.</para>
<para>OCBoolean provides a way to work with Boolean logic using OCType objects. It defines two singletons, kOCBooleanTrue and kOCBooleanFalse, to represent true and false values respectively. :type <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref>: :brief: An opaque reference to an immutable OCBoolean object.</para>
<para><ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> is used to represent Boolean values (true or false) within the OCTypes framework. These objects are singletons and should not be retained or released. </para>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCBoolean.h" line="39" column="33" bodyfile="src/OCBoolean.h" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group___o_c_boolean_1ga3bffcc9a1c9d1db81d6b3763f69f1a50" prot="public" static="no" extern="yes" mutable="no">
        <type>const <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref></type>
        <definition>const OCBooleanRef kOCBooleanTrue</definition>
        <argsstring></argsstring>
        <name>kOCBooleanTrue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:var kOCBooleanTrue: :brief: The immutable singleton <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> object representing the Boolean value &apos;true&apos;. :discussion: This object should be used whenever a true Boolean value is needed. Do not attempt to allocate or deallocate this object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCBoolean.h" line="55" column="27" bodyfile="src/OCBoolean.c" bodystart="29" bodyend="-1" declfile="src/OCBoolean.h" declline="55" declcolumn="27"/>
      </memberdef>
      <memberdef kind="variable" id="group___o_c_boolean_1gad90327bf96dae0736bc14c3d6cfbbc22" prot="public" static="no" extern="yes" mutable="no">
        <type>const <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref></type>
        <definition>const OCBooleanRef kOCBooleanFalse</definition>
        <argsstring></argsstring>
        <name>kOCBooleanFalse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:var kOCBooleanFalse: :brief: The immutable singleton <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> object representing the Boolean value &apos;false&apos;. :discussion: This object should be used whenever a false Boolean value is needed. Do not attempt to allocate or deallocate this object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCBoolean.h" line="63" column="27" bodyfile="src/OCBoolean.c" bodystart="30" bodyend="-1" declfile="src/OCBoolean.h" declline="63" declcolumn="27"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___o_c_boolean_1ga52f1b4e9284046835ad8ee23ef367b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref></type>
        <definition>OCTypeID OCBooleanGetTypeID</definition>
        <argsstring>(void)</argsstring>
        <name>OCBooleanGetTypeID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCBooleanGetTypeID :brief: Returns the unique type identifier for the OCBoolean class. :return: The <ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref> associated with OCBoolean objects. This ID is used to distinguish OCBoolean objects from other OCType objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCBoolean.h" line="47" column="10" bodyfile="src/OCBoolean.c" bodystart="55" bodyend="57" declfile="src/OCBoolean.h" declline="47" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_boolean_1ga890cb16c748073108e829dad87322553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OCBooleanGetValue</definition>
        <argsstring>(OCBooleanRef boolean)</argsstring>
        <name>OCBooleanGetValue</name>
        <param>
          <type><ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref></type>
          <declname>boolean</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCBooleanGetValue :brief: Retrieves the primitive Boolean value (true or false) from an <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> object. :param boolean: The <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> object to query. Must be either kOCBooleanTrue or kOCBooleanFalse. :return: Returns <computeroutput>true</computeroutput> if the specified <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> is kOCBooleanTrue. Returns <computeroutput>false</computeroutput> if the specified <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> is kOCBooleanFalse. The behavior is undefined if an invalid <ref refid="group___o_c_boolean_1ga333efd08bfea7a6d27702fac3afab9be" kindref="member">OCBooleanRef</ref> is passed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCBoolean.h" line="73" column="6" bodyfile="src/OCBoolean.c" bodystart="59" bodyend="61" declfile="src/OCBoolean.h" declline="73" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
