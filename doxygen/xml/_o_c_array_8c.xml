<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_o_c_array_8c" kind="file" language="C++">
    <compoundname>OCArray.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="_o_c_library_8h" local="yes">OCLibrary.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/OCArray.c</label>
        <link refid="_o_c_array_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>OCArray.h</label>
        <link refid="_o_c_array_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>OCAutoreleasePool.h</label>
        <link refid="_o_c_autorelease_pool_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>OCBoolean.h</label>
        <link refid="_o_c_boolean_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>OCData.h</label>
        <link refid="_o_c_data_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>OCDictionary.h</label>
        <link refid="_o_c_dictionary_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>OCLibrary.h</label>
        <link refid="_o_c_library_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>OCMath.h</label>
        <link refid="_o_c_math_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>OCNumber.h</label>
        <link refid="_o_c_number_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>OCString.h</label>
        <link refid="_o_c_string_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>OCType.h</label>
        <link refid="_o_c_type_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>assert.h</label>
      </node>
      <node id="16">
        <label>complex.h</label>
      </node>
      <node id="10">
        <label>ctype.h</label>
      </node>
      <node id="11">
        <label>errno.h</label>
      </node>
      <node id="12">
        <label>float.h</label>
      </node>
      <node id="22">
        <label>inttypes.h</label>
      </node>
      <node id="13">
        <label>limits.h</label>
      </node>
      <node id="14">
        <label>locale.h</label>
      </node>
      <node id="15">
        <label>math.h</label>
      </node>
      <node id="17">
        <label>setjmp.h</label>
      </node>
      <node id="18">
        <label>signal.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="19">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="20">
        <label>stdio.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>sys/types.h</label>
      </node>
      <node id="21">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_____o_c_array" prot="public">__OCArray</innerclass>
    <innerclass refid="struct__acompare_context" prot="public">_acompareContext</innerclass>
    <innerclass refid="structqsort_context" prot="public">qsortContext</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="_o_c_array_8c_1a69f810caaafcb9fc3e535656d1ecd179" prot="public" static="no">
        <name>_Nullable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="23" column="9" bodyfile="src/OCArray.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_o_c_array_8c_1adf63c0be9c8be44ddb81199ca68caf66" prot="public" static="no">
        <name>_Nonnull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="24" column="9" bodyfile="src/OCArray.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_o_c_array_8c_1a66b9a7d928ddda95562c6c20af51eb23" prot="public" static="no">
        <name>INVOKE_CALLBACK3</name>
        <param><defname>P</defname></param>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer>(P)(A, B, C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="351" column="9" bodyfile="src/OCArray.c" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_o_c_array_8c_1a66b9a7d928ddda95562c6c20af51eb23" prot="public" static="no">
        <name>INVOKE_CALLBACK3</name>
        <param><defname>P</defname></param>
        <param><defname>A</defname></param>
        <param><defname>B</defname></param>
        <param><defname>C</defname></param>
        <initializer>(P)(A, B, C)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="464" column="9" bodyfile="src/OCArray.c" bodystart="351" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="_o_c_array_8c_1a9c68246b7a28b4c76370b41daeee3b3f" prot="public" static="yes" mutable="no">
        <type><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref></type>
        <definition>OCTypeID kOCArrayID</definition>
        <argsstring></argsstring>
        <name>kOCArrayID</name>
        <initializer>= <ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="38" column="17" bodyfile="src/OCArray.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <member refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kind="variable"><name>kOCTypeArrayCallBacks</name></member>
      <memberdef kind="variable" id="_o_c_array_8c_1af17c053a7f828b0bae4a43aa09e896d8" prot="public" static="yes" mutable="no">
        <type>const <ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref></type>
        <definition>const OCArrayCallBacks __kOCNullArrayCallBacks</definition>
        <argsstring></argsstring>
        <name>__kOCNullArrayCallBacks</name>
        <initializer>= {0, NULL, NULL, NULL, NULL}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="41" column="31" bodyfile="src/OCArray.c" bodystart="41" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="_o_c_array_8c_1a4d5b478ee5348438412d73bf3e747b93" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool __OCArrayEqual</definition>
        <argsstring>(const void *theType1, const void *theType2)</argsstring>
        <name>__OCArrayEqual</name>
        <param>
          <type>const void *</type>
          <declname>theType1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>theType2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="54" column="13" bodyfile="src/OCArray.c" bodystart="54" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="_o_c_array_8c_1acbec8265a3c2d3ab55e3629ad4d141c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _OCArrayReleaseValues</definition>
        <argsstring>(OCArrayRef theArray)</argsstring>
        <name>_OCArrayReleaseValues</name>
        <param>
          <type><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref></type>
          <declname>theArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="96" column="13" bodyfile="src/OCArray.c" bodystart="96" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="_o_c_array_8c_1ab3510510ace6ae9d5a3a00b2685ad1d2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _OCArrayRetainValues</definition>
        <argsstring>(OCArrayRef theArray)</argsstring>
        <name>_OCArrayRetainValues</name>
        <param>
          <type><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref></type>
          <declname>theArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="107" column="13" bodyfile="src/OCArray.c" bodystart="107" bodyend="116"/>
      </memberdef>
      <member refid="group___o_c_array_1gab211609b6c6a616ebdd666612c4eef98" kind="function"><name>OCArrayGetCount</name></member>
      <memberdef kind="function" id="_o_c_array_8c_1a86da8471b55e71bb43ebd9db2a2907fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void __OCArrayFinalize</definition>
        <argsstring>(const void *theType)</argsstring>
        <name>__OCArrayFinalize</name>
        <param>
          <type>const void *</type>
          <declname>theType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="124" column="13" bodyfile="src/OCArray.c" bodystart="124" bodyend="131"/>
      </memberdef>
      <member refid="group___o_c_array_1ga5cf2742d8c7fa86e142fe2180881adf8" kind="function"><name>OCArrayGetTypeID</name></member>
      <memberdef kind="function" id="_o_c_array_8c_1ae9de773edc2b5e3c5cfef7430e651575" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref> *</type>
        <definition>static struct __OCArray * OCArrayAllocate</definition>
        <argsstring>()</argsstring>
        <name>OCArrayAllocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="139" column="23" bodyfile="src/OCArray.c" bodystart="139" bodyend="154"/>
      </memberdef>
      <member refid="group___o_c_array_1gaebb5f8fa913d5f2ab52058b863f7f504" kind="function"><name>OCArrayCreate</name></member>
      <member refid="group___o_c_array_1ga4624c972ebdb139df9d868197fd3ed84" kind="function"><name>OCArrayCreateCopy</name></member>
      <member refid="group___o_c_array_1gab35d251ea460416894dfefc8d602d925" kind="function"><name>OCArrayCreateMutable</name></member>
      <member refid="group___o_c_array_1gaff447aa2a559bf1d1b08701d3b3701a1" kind="function"><name>OCArrayCreateMutableCopy</name></member>
      <member refid="group___o_c_array_1ga9f3748edc03e1624767022b51e58c21d" kind="function"><name>OCArrayGetValueAtIndex</name></member>
      <member refid="group___o_c_array_1ga83fabca84f4f91facaa96d68febddcd6" kind="function"><name>OCArrayRemoveValueAtIndex</name></member>
      <member refid="group___o_c_array_1ga8296e17b6dd537e7f2f189247ae3db3c" kind="function"><name>OCArrayGetFirstIndexOfValue</name></member>
      <member refid="group___o_c_array_1gae67e86401e7c2c6f383a8a733308c7b6" kind="function"><name>OCArrayAppendValue</name></member>
      <member refid="group___o_c_array_1ga877e4edac656b414855a61b601326899" kind="function"><name>OCArrayAppendArray</name></member>
      <member refid="group___o_c_array_1ga81f1411e20e671c3580b487b3ded4d45" kind="function"><name>OCArrayInsertValueAtIndex</name></member>
      <member refid="group___o_c_array_1gad496aefefecf2a53cc0b9e57cf3d7090" kind="function"><name>OCArrayContainsValue</name></member>
      <member refid="group___o_c_array_1ga91c1a9a20ece30bf0c336406ecfe710d" kind="function"><name>OCArraySortValues</name></member>
      <memberdef kind="function" id="_o_c_array_8c_1a67bea71c0bb7add02d6b31b6e90449e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t OCBSearch</definition>
        <argsstring>(void *element, int64_t elementSize, const void *list, int64_t count, OCComparatorFunction comparator, void *context)</argsstring>
        <name>OCBSearch</name>
        <param>
          <type>void *</type>
          <declname>element</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>elementSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>list</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref></type>
          <declname>comparator</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OCArray.c" line="466" column="9" bodyfile="src/OCArray.c" bodystart="466" bodyend="483"/>
      </memberdef>
      <member refid="group___o_c_array_1ga8e866069c1012ba9c9b501ce3300449e" kind="function"><name>OCArrayBSearchValues</name></member>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#if<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)))<sp/>||<sp/>\</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>qsort_s<sp/>(C11<sp/>Annex<sp/>K)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>__STDC_WANT_LIB_EXT1__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__STDC_WANT_LIB_EXT1__<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>GNU-specific<sp/>extensions<sp/>(like<sp/>GNU<sp/>qsort_r<sp/>if<sp/>available)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>_GNU_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>qsort,<sp/>qsort_r,<sp/>qsort_s,<sp/>malloc,<sp/>etc.<sp/>Must<sp/>be<sp/>early<sp/>for<sp/>feature<sp/>macros.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>uint64_t,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Handle<sp/>Nullability<sp/>qualifiers<sp/>for<sp/>non-Clang<sp/>compilers<sp/>(like<sp/>GCC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Nullable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_Nonnull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OCArray.c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>OCTypes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>philip<sp/>on<sp/>4/2/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_c_library_8h" kindref="compound">OCLibrary.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Should<sp/>be<sp/>included<sp/>after<sp/>system<sp/>headers<sp/>if<sp/>it<sp/>also<sp/>includes<sp/>them,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>ensure<sp/>OCLibrary.h<sp/>doesn&apos;t<sp/>conflict<sp/>with<sp/>_GNU_SOURCE<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>OCLibrary.h<sp/>includes<sp/>stdlib.h,<sp/>stdio.h<sp/>etc.,<sp/>defining<sp/>_GNU_SOURCE<sp/>first<sp/>is<sp/>correct.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/><ref refid="_o_c_array_8c_1a9c68246b7a28b4c76370b41daeee3b3f" kindref="member">kOCArrayID</ref><sp/>=<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref><sp/><ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref><sp/>=<sp/>{0,<sp/><ref refid="group___o_c_type_1ga3a27a5361c9635b95b63a833ea378b91" kindref="member">OCRetain</ref>,<sp/><ref refid="group___o_c_type_1ga2b6e5ce9f5cbfbb459569f2188c445b8" kindref="member">OCRelease</ref>,<sp/><ref refid="group___o_c_type_1ga1935a8db7fe65f4b4801431a6bc4138b" kindref="member">OCCopyDescription</ref>,<sp/><ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref><sp/><ref refid="_o_c_array_8c_1af17c053a7f828b0bae4a43aa09e896d8" kindref="member">__kOCNullArrayCallBacks</ref><sp/>=<sp/>{0,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>NULL};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OCArray<sp/>Opaque<sp/>Type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_____o_c_array" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga66b90fed8dd532198f1a04d294dbaa69" kindref="member">OCBase</ref><sp/><ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OCArray<sp/>Type<sp/>attributes<sp/><sp/>-<sp/>order<sp/>of<sp/>declaration<sp/>is<sp/>essential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref><sp/>*<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>from<sp/>u_int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref>;<sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>from<sp/>u_int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_o_c_array_8c_1a4d5b478ee5348438412d73bf3e747b93" kindref="member">__OCArrayEqual</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*theType1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*theType2)</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray1<sp/>=<sp/>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref>)<sp/>theType1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray2<sp/>=<sp/>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref>)<sp/>theType2;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>!=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theArray1<sp/>||<sp/>NULL<sp/>==<sp/>theArray2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1<sp/>==<sp/>theArray2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>!=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>!=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index<sp/>=<sp/>0;index&lt;<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>from<sp/>u_int64_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val1<sp/>=<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val2<sp/>=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>(val1,<sp/>val2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray1-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val1<sp/>=<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val2<sp/>=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>(val1,<sp/>val2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray1-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a392c1ca60f56d3f6d1f1ce44b8bda865" kindref="member">equal</ref>!=NULL)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray1-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val1<sp/>=<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val2<sp/>=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!theArray1-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a392c1ca60f56d3f6d1f1ce44b8bda865" kindref="member">equal</ref>(val1,<sp/>val2))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray1-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val1<sp/>=<sp/>theArray1-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>val2<sp/>=<sp/>theArray2-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val1<sp/>!=<sp/>val2)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_o_c_array_8c_1acbec8265a3c2d3ab55e3629ad4d141c4" kindref="member">_OCArrayReleaseValues</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray<sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a6ed8c4aa7ae8433ac1dce8d86f588455" kindref="member">release</ref>)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index])<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>NULL<sp/>check<sp/>for<sp/>safety<sp/>before<sp/>dereferencing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a6ed8c4aa7ae8433ac1dce8d86f588455" kindref="member">release</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_o_c_array_8c_1ab3510510ace6ae9d5a3a00b2685ad1d2" kindref="member">_OCArrayRetainValues</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray<sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index])<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>NULL<sp/>check<sp/>for<sp/>safety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">uint64_t<sp/><ref refid="group___o_c_array_1gab211609b6c6a616ebdd666612c4eef98" kindref="member">OCArrayGetCount</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_o_c_array_8c_1a86da8471b55e71bb43ebd9db2a2907fa" kindref="member">__OCArrayFinalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>theType)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theType)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray<sp/>=<sp/>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref>)<sp/>theType;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_o_c_array_8c_1acbec8265a3c2d3ab55e3629ad4d141c4" kindref="member">_OCArrayReleaseValues</ref>(theArray);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)theArray);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref><sp/><ref refid="group___o_c_array_1ga5cf2742d8c7fa86e142fe2180881adf8" kindref="member">OCArrayGetTypeID</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_o_c_array_8c_1a9c68246b7a28b4c76370b41daeee3b3f" kindref="member">kOCArrayID</ref><sp/>==<sp/><ref refid="group___o_c_type_1ggad248aac9bbfa64d39561aaaea4ab5a1eaf0ee6bc8529180c1c8e8037431a72de7" kindref="member">_kOCNotATypeID</ref>)<sp/><ref refid="_o_c_array_8c_1a9c68246b7a28b4c76370b41daeee3b3f" kindref="member">kOCArrayID</ref><sp/>=<sp/><ref refid="group___o_c_type_1gaf0ec7b8c3f8096a2c8fa560c10a136bf" kindref="member">OCRegisterType</ref>(</highlight><highlight class="stringliteral">&quot;OCArray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_o_c_array_8c_1a9c68246b7a28b4c76370b41daeee3b3f" kindref="member">kOCArrayID</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref><sp/>*<ref refid="_o_c_array_8c_1ae9de773edc2b5e3c5cfef7430e651575" kindref="member">OCArrayAllocate</ref>()</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref><sp/>*theArray<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref>));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a57413231fb08c0b703e49e3052ebeb33" kindref="member">typeID</ref><sp/>=<sp/><ref refid="group___o_c_array_1ga5cf2742d8c7fa86e142fe2180881adf8" kindref="member">OCArrayGetTypeID</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a45d13a42e73d92077e1d3b7f04e08767" kindref="member">retainCount</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1aa2182da1dc0de45f16e782f94bb43cb7" kindref="member">finalize</ref><sp/>=<sp/><ref refid="_o_c_array_8c_1a86da8471b55e71bb43ebd9db2a2907fa" kindref="member">__OCArrayFinalize</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a3b4bd801666626087c490a016c8353d9" kindref="member">equal</ref><sp/>=<sp/><ref refid="_o_c_array_8c_1a4d5b478ee5348438412d73bf3e747b93" kindref="member">__OCArrayEqual</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1af5109e7bbea6778149b46e03b06762f2" kindref="member">_base</ref>.<ref refid="struct_____o_c_base_1a658977341e9751990f8d323f49d9fbaf" kindref="member">copyFormattingDesc</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Or<sp/>provide<sp/>a<sp/>suitable<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>=<sp/>&amp;<ref refid="_o_c_array_8c_1af17c053a7f828b0bae4a43aa09e896d8" kindref="member">__kOCNullArrayCallBacks</ref>;<sp/></highlight><highlight class="comment">//<sp/>Default,<sp/>can<sp/>be<sp/>overridden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>data<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theArray;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/><ref refid="group___o_c_array_1gaebb5f8fa913d5f2ab52058b863f7f504" kindref="member">OCArrayCreate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**values,<sp/>uint64_t<sp/>numValues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref><sp/>*<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>creation<sp/>of<sp/>an<sp/>empty<sp/>array<sp/>even<sp/>if<sp/>values<sp/>is<sp/>NULL,<sp/>as<sp/>long<sp/>as<sp/>numValues<sp/>is<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numValues<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>NULL<sp/>==<sp/>values)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref><sp/>*newArray<sp/>=<sp/><ref refid="_o_c_array_8c_1ae9de773edc2b5e3c5cfef7430e651575" kindref="member">OCArrayAllocate</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>newArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numValues<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>malloc(numValues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(newArray);<sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up<sp/>allocated<sp/>array<sp/>shell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>values,<sp/>numValues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>NULL<sp/>for<sp/>0<sp/>elements,<sp/>though<sp/>OCArrayAllocate<sp/>might<sp/>do<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>=<sp/>numValues;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>=<sp/>numValues;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>immutable<sp/>arrays,<sp/>capacity<sp/>equals<sp/>count.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>=<sp/><ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>?<sp/><ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>:<sp/>&amp;<ref refid="_o_c_array_8c_1af17c053a7f828b0bae4a43aa09e896d8" kindref="member">__kOCNullArrayCallBacks</ref>;<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>callbacks<sp/>is<sp/>not<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_o_c_array_8c_1ab3510510ace6ae9d5a3a00b2685ad1d2" kindref="member">_OCArrayRetainValues</ref>(newArray);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newArray;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/><ref refid="group___o_c_array_1ga4624c972ebdb139df9d868197fd3ed84" kindref="member">OCArrayCreateCopy</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>NULL<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>immutable<sp/>copies,<sp/>capacity<sp/>can<sp/>be<sp/>same<sp/>as<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref>)<sp/><ref refid="group___o_c_array_1gaebb5f8fa913d5f2ab52058b863f7f504" kindref="member">OCArrayCreate</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>,<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/><ref refid="group___o_c_array_1gab35d251ea460416894dfefc8d602d925" kindref="member">OCArrayCreateMutable</ref>(uint64_t<sp/><ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_o_c_array_call_backs" kindref="compound">OCArrayCallBacks</ref><sp/>*<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_____o_c_array" kindref="compound">__OCArray</ref><sp/>*newArray<sp/>=<sp/><ref refid="_o_c_array_8c_1ae9de773edc2b5e3c5cfef7430e651575" kindref="member">OCArrayAllocate</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>newArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>malloc(<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(newArray);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Can<sp/>start<sp/>with<sp/>NULL<sp/>data<sp/>if<sp/>capacity<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>=<sp/><ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>newArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>=<sp/><ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>?<sp/><ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>:<sp/>&amp;<ref refid="_o_c_array_8c_1af17c053a7f828b0bae4a43aa09e896d8" kindref="member">__kOCNullArrayCallBacks</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newArray;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/><ref refid="group___o_c_array_1gaff447aa2a559bf1d1b08701d3b3701a1" kindref="member">OCArrayCreateMutableCopy</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>mutable<sp/>copy<sp/>with<sp/>initial<sp/>capacity<sp/>at<sp/>least<sp/>the<sp/>count<sp/>of<sp/>the<sp/>original<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>newMutableArray<sp/>=<sp/><ref refid="group___o_c_array_1gab35d251ea460416894dfefc8d602d925" kindref="member">OCArrayCreateMutable</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>&gt;<sp/>0<sp/>?<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>:<sp/>1,<sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>newMutableArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(newMutableArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newMutableArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_o_c_array_8c_1ab3510510ace6ae9d5a3a00b2685ad1d2" kindref="member">_OCArrayRetainValues</ref>(newMutableArray);<sp/></highlight><highlight class="comment">//<sp/>Retain<sp/>values<sp/>copied<sp/>into<sp/>the<sp/>new<sp/>mutable<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newMutableArray;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="group___o_c_array_1ga9f3748edc03e1624767022b51e58c21d" kindref="member">OCArrayGetValueAtIndex</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray,<sp/>uint64_t<sp/>index)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index&gt;=theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index];</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1ga83fabca84f4f91facaa96d68febddcd6" kindref="member">OCArrayRemoveValueAtIndex</ref>(<ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>theArray,uint64_t<sp/>index)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theArray<sp/>||<sp/>index<sp/>&gt;=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Added<sp/>NULL<sp/>check<sp/>for<sp/>theArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a6ed8c4aa7ae8433ac1dce8d86f588455" kindref="member">release</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>release<sp/>callback<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a6ed8c4aa7ae8433ac1dce8d86f588455" kindref="member">release</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Specific<sp/>check<sp/>for<sp/>kOCTypeArrayCallBacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga2b6e5ce9f5cbfbb459569f2188c445b8" kindref="member">OCRelease</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>--;<sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>count<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>i<sp/>=<sp/>index;<sp/>i<sp/>&lt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>up<sp/>to<sp/>new<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[i]<sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[i+1];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1ga8296e17b6dd537e7f2f189247ae3db3c" kindref="member">OCArrayGetFirstIndexOfValue</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==theArray<sp/>||<sp/>NULL<sp/>==<sp/>value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gga4b3e3e9af8c54292907f45141e6dd174abac9508514b568411f4ececcff5260ec" kindref="member">kOCNotFound</ref>;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>kOCNotFound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1ga9ae83ba398624e3959f3086004b51bf8" kindref="member">OCArrayEqualCallBack</ref><sp/>equalCB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equalCB<sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a392c1ca60f56d3f6d1f1ce44b8bda865" kindref="member">equal</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>OCTypeEqual<sp/>is<sp/>used<sp/>for<sp/>kOCTypeArrayCallBacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>equalCB<sp/>=<sp/><ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index<sp/>&lt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Changed<sp/>to<sp/>uint64_t<sp/>for<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(equalCB)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(equalCB(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index],<sp/>value))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)index;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Fallback<sp/>to<sp/>direct<sp/>pointer<sp/>comparison<sp/>if<sp/>no<sp/>equal<sp/>callback</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]<sp/>==<sp/>value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)index;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gga4b3e3e9af8c54292907f45141e6dd174abac9508514b568411f4ececcff5260ec" kindref="member">kOCNotFound</ref>;<sp/></highlight><highlight class="comment">//<sp/>Use<sp/>kOCNotFound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1gae67e86401e7c2c6f383a8a733308c7b6" kindref="member">OCArrayAppendValue</ref>(<ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>theArray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==theArray<sp/>||<sp/>NULL==value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Added<sp/>NULL<sp/>check<sp/>for<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>type<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>value;<sp/></highlight><highlight class="comment">//<sp/>Assuming<sp/>value<sp/>is<sp/>an<sp/>OCTypeRef<sp/>for<sp/>retain/release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>==<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>newCapacity<sp/>=<sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>*<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>Grow<sp/>by<sp/>doubling,<sp/>or<sp/>start<sp/>at<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**newData<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>realloc(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>newCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>newData)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>newData;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>]<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>(type);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Specific<sp/>check<sp/>for<sp/>kOCTypeArrayCallBacks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga3a27a5361c9635b95b63a833ea378b91" kindref="member">OCRetain</ref>(type);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1ga877e4edac656b414855a61b601326899" kindref="member">OCArrayAppendArray</ref>(<ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>theArray,<sp/><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>otherArray,<sp/><ref refid="struct_o_c_range" kindref="compound">OCRange</ref><sp/>range)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==otherArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>=<sp/><ref refid="group___o_c_array_1gab211609b6c6a616ebdd666612c4eef98" kindref="member">OCArrayGetCount</ref>(otherArray);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref>+range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref><sp/>&gt;<sp/><ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref>;index&lt;range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref>+range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref>;index++)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>theType<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/><ref refid="group___o_c_array_1ga9f3748edc03e1624767022b51e58c21d" kindref="member">OCArrayGetValueAtIndex</ref>(otherArray,<sp/>index);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_array_1gae67e86401e7c2c6f383a8a733308c7b6" kindref="member">OCArrayAppendValue</ref>(theArray,<sp/>theType);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1ga81f1411e20e671c3580b487b3ded4d45" kindref="member">OCArrayInsertValueAtIndex</ref>(<ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>theArray,<sp/>uint64_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL<sp/>==<sp/>theArray<sp/>||<sp/>NULL<sp/>==<sp/>value<sp/>||<sp/>index<sp/>&gt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Added<sp/>NULL<sp/>checks,<sp/>ensure<sp/>index<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref><sp/>type<sp/>=<sp/>(<ref refid="group___o_c_type_1ga6acd02149bce3e91fb2fe325ab7f65ed" kindref="member">OCTypeRef</ref>)<sp/>value;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>==<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>newCapacity<sp/>=<sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**newData<sp/>=<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>realloc(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>,<sp/>newCapacity<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(NULL<sp/>==<sp/>newData)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>=<sp/>newData;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1ae2f9c80ed88562287e041d03d8bc62f3" kindref="member">capacity</ref><sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>i<sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>i<sp/>&gt;<sp/>index;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[i]<sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[i-1];</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>&amp;&amp;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1afda5a289f62d4d7f05705df5b9cecddf" kindref="member">retain</ref>(type);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_type_1ga3a27a5361c9635b95b63a833ea378b91" kindref="member">OCRetain</ref>(type);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>++;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="struct__acompare_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__acompare_context" kindref="compound">_acompareContext</ref><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref><sp/><ref refid="struct__acompare_context_1ab46e166061a63b1e4df34e5e36f82a7c" kindref="member">func</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct__acompare_context_1ab7a33029063ed963ad575878409072a9" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">};</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVOKE_CALLBACK3(P,<sp/>A,<sp/>B,<sp/>C)<sp/>(P)(A,<sp/>B,<sp/>C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1gad496aefefecf2a53cc0b9e57cf3d7090" kindref="member">OCArrayContainsValue</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>theArray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>value)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==theArray)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref><sp/>==<sp/>&amp;<ref refid="group___o_c_array_1ga182ff67a03e309f74629c2efe8a2e6e5" kindref="member">kOCTypeArrayCallBacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="group___o_c_type_1ga8c0b9dcf81ef80522730223975b821b0" kindref="member">OCTypeEqual</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index],<sp/>value))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1a16022dee9b80737e434f1a0c0d82c3f9" kindref="member">callBacks</ref>-&gt;<ref refid="struct_o_c_array_call_backs_1a392c1ca60f56d3f6d1f1ce44b8bda865" kindref="member">equal</ref>(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index],<sp/>value))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(uint64_t<sp/>index=0;<sp/>index&lt;theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref>[index]<sp/>==<sp/>value)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="structqsort_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref><sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comparator<sp/>wrapper<sp/>for<sp/>qsort_r<sp/>(BSD,<sp/>macOS)<sp/>and<sp/>qsort_s<sp/>(MSVC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signature:<sp/>int<sp/>(*compar)(void<sp/>*thunk,<sp/>const<sp/>void<sp/>*a,<sp/>const<sp/>void<sp/>*b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)<sp/>||<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(__NetBSD__)<sp/>||<sp/>defined(__OpenBSD__)<sp/>||<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thunk_first_qsort_compare_wrapper(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thunk,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val1_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val2_ptr)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>*myContext<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>*)<sp/>thunk;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj1<sp/>=<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>val1_ptr);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj2<sp/>=<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>val2_ptr);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myContext-&gt;<ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>(obj1,<sp/>obj2,<sp/>myContext-&gt;<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Comparator<sp/>wrapper<sp/>for<sp/>qsort_r<sp/>(GNU/Linux,<sp/>MinGW,<sp/>Cygwin<sp/>GCC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Signature:<sp/>int<sp/>(*compar)(const<sp/>void<sp/>*a,<sp/>const<sp/>void<sp/>*b,<sp/>void<sp/>*thunk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thunk_last_qsort_compare_wrapper(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val1_ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*val2_ptr,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*thunk)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>*myContext<sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>*)<sp/>thunk;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj1<sp/>=<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>val1_ptr);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj2<sp/>=<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)<sp/>val2_ptr);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myContext-&gt;<ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>(obj1,<sp/>obj2,<sp/>myContext-&gt;<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___o_c_array_1ga91c1a9a20ece30bf0c336406ecfe710d" kindref="member">OCArraySortValues</ref>(<ref refid="group___o_c_array_1ga24c04bc73e1c423b53a48ea599e81dec" kindref="member">OCMutableArrayRef</ref><sp/>theArray,<sp/><ref refid="struct_o_c_range" kindref="compound">OCRange</ref><sp/>range,<sp/><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref><sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(theArray<sp/>==<sp/>NULL<sp/>||<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>==<sp/>0<sp/>||<sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref><sp/>==<sp/>NULL<sp/>||<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ensure<sp/>range<sp/>is<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref><sp/>&gt;=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>||<sp/>(range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref><sp/>+<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref>)<sp/>&gt;<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structqsort_context" kindref="compound">qsortContext</ref><sp/>myContext<sp/>=<sp/>{<ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>,<sp/><ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>};</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**base_ptr<sp/>=<sp/>theArray-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>+<sp/>range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb<sp/>=<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>element_size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)<sp/>||<sp/>defined(__FreeBSD__)<sp/>||<sp/>defined(__NetBSD__)<sp/>||<sp/>defined(__OpenBSD__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BSD<sp/>qsort_r:<sp/>compar(thunk,<sp/>a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort_r(base_ptr,<sp/>nmemb,<sp/>element_size,<sp/>&amp;myContext,<sp/>thunk_first_qsort_compare_wrapper);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__linux__)<sp/>&amp;&amp;<sp/>defined(_GNU_SOURCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GNU/Linux<sp/>qsort_r:<sp/>compar(a,<sp/>b,<sp/>thunk)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>qsort_r(base_ptr,<sp/>nmemb,<sp/>element_size,<sp/>thunk_last_qsort_compare_wrapper,<sp/>&amp;myContext);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(_WIN32)<sp/>||<sp/>defined(__CYGWIN__)))<sp/></highlight><highlight class="comment">//<sp/>MinGW<sp/>or<sp/>Cygwin<sp/>with<sp/>GCC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**arr<sp/>=<sp/>base_ptr;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>nmemb;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>arr[i];</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*prev<sp/>=<sp/>arr[j<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(myContext.<ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>(prev,<sp/>tmp,<sp/>myContext.<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[j]<sp/>=<sp/>arr[j<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j--;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr[j]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)<sp/>&amp;&amp;<sp/>defined(_WIN32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__STDC_LIB_EXT1__)<sp/>&amp;&amp;<sp/>__STDC_LIB_EXT1__<sp/>&gt;=<sp/>201112L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qsort_s(base_ptr,<sp/>nmemb,<sp/>element_size,<sp/>thunk_first_qsort_compare_wrapper,<sp/>&amp;myContext);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>&quot;MSVC:<sp/>qsort_s<sp/>not<sp/>available<sp/>(check<sp/>__STDC_WANT_LIB_EXT1__<sp/>definition<sp/>and<sp/>compiler/library<sp/>version).&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#warning<sp/>&quot;Platform<sp/>not<sp/>explicitly<sp/>supported<sp/>for<sp/>qsort_r<sp/>or<sp/>qsort_s.<sp/>Contextual<sp/>sort<sp/>may<sp/>fail.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>&quot;Contextual<sp/>sort<sp/>(qsort_r/qsort_s)<sp/>not<sp/>implemented<sp/>for<sp/>this<sp/>platform<sp/>and<sp/>context<sp/>is<sp/>required.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#error<sp/>&quot;Fallback<sp/>to<sp/>standard<sp/>qsort<sp/>for<sp/>NULL<sp/>context<sp/>not<sp/>robustly<sp/>implemented.<sp/>Please<sp/>provide<sp/>a<sp/>qsort_r/qsort_s<sp/>equivalent<sp/>for<sp/>your<sp/>platform<sp/>or<sp/>ensure<sp/>the<sp/>comparator<sp/>can<sp/>work<sp/>with<sp/>standard<sp/>qsort.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVOKE_CALLBACK3(P,<sp/>A,<sp/>B,<sp/>C)<sp/>(P)(A,<sp/>B,<sp/>C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal">int64_t<sp/><ref refid="_o_c_array_8c_1a67bea71c0bb7add02d6b31b6e90449e6" kindref="member">OCBSearch</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_o_c_array_8c_1a69f810caaafcb9fc3e535656d1ecd179" kindref="member">_Nullable</ref><sp/>element,<sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>elementSize,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*list,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>count,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref><sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>,</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)list;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>half<sp/>=<sp/>count<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*probe<sp/>=<sp/>ptr<sp/>+<sp/>elementSize<sp/>*<sp/>half;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref><sp/>cr<sp/>=<sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>(element,<sp/>probe,<sp/><ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>cr)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(probe<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)list)<sp/>/<sp/>elementSize;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>(cr<sp/>&lt;<sp/>0)<sp/>?<sp/>ptr<sp/>:<sp/>probe<sp/>+<sp/>elementSize;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>(cr<sp/>&lt;<sp/>0)<sp/>?<sp/>half<sp/>:<sp/>(half<sp/>+<sp/>(count<sp/>&amp;<sp/>1)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)list)<sp/>/<sp/>elementSize;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">int64_t<sp/><ref refid="group___o_c_array_1ga8e866069c1012ba9c9b501ce3300449e" kindref="member">OCArrayBSearchValues</ref>(<ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref><sp/>array,<sp/><ref refid="struct_o_c_range" kindref="compound">OCRange</ref><sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,<sp/><ref refid="group___o_c_library_1ga84ac0c9947faa8de6dbb81352513c1f7" kindref="member">OCComparatorFunction</ref><sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NULL==array<sp/>||<sp/>NULL==<ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref><sp/>||<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gga4b3e3e9af8c54292907f45141e6dd174abac9508514b568411f4ececcff5260ec" kindref="member">kOCNotFound</ref>;<sp/></highlight><highlight class="comment">//<sp/>Return<sp/>kOCNotFound<sp/>for<sp/>invalid<sp/>inputs<sp/>or<sp/>empty<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref><sp/>&gt;=<sp/>array-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref><sp/>||<sp/>(range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref><sp/>+<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref>)<sp/>&gt;<sp/>array-&gt;<ref refid="struct_____o_c_array_1a928722b0284a21c70fe5d91836c33a70" kindref="member">count</ref>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___o_c_type_1gga4b3e3e9af8c54292907f45141e6dd174abac9508514b568411f4ececcff5260ec" kindref="member">kOCNotFound</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**base<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)(array-&gt;<ref refid="struct_____o_c_array_1abbe848508cab0deafa32fc514e8da80f" kindref="member">data</ref><sp/>+<sp/>range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>range.<ref refid="struct_o_c_range_1a0dbaf7f02ff7918232ed7892c9d4eafd" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>low<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>high<sp/>=<sp/>num<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>result_idx<sp/>=<sp/><ref refid="group___o_c_type_1gga4b3e3e9af8c54292907f45141e6dd174abac9508514b568411f4ececcff5260ec" kindref="member">kOCNotFound</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(low<sp/>&lt;=<sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>mid<sp/>=<sp/>low<sp/>+<sp/>(high<sp/>-<sp/>low)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mid_val<sp/>=<sp/>base[mid];</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref><sp/>cmp<sp/>=<sp/><ref refid="structqsort_context_1a4bd93aea31cb6caad35c1c02b52b5405" kindref="member">comparator</ref>(value,<sp/>mid_val,<sp/><ref refid="structqsort_context_1a8804e575ab8d728e28e7981d7e51cc27" kindref="member">context</ref>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/><ref refid="group___o_c_library_1gga395ff068e826f2b8cdaab226094399c8a1814420156dc0303801cb9129b10dc55" kindref="member">kOCCompareEqualTo</ref>)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_idx<sp/>=<sp/>range.<ref refid="struct_o_c_range_1a87a770d78d123ad882ce0d68803d5be5" kindref="member">location</ref><sp/>+<sp/>mid;<sp/></highlight><highlight class="comment">//<sp/>Found,<sp/>return<sp/>original<sp/>array<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>==<sp/><ref refid="group___o_c_library_1gga395ff068e826f2b8cdaab226094399c8a925b5b072d953695f3828c0a8d15aec1" kindref="member">kOCCompareLessThan</ref>)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>high<sp/>=<sp/>mid<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>kOCCompareGreaterThan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>low<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_idx;</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/OCArray.c"/>
  </compounddef>
</doxygen>
