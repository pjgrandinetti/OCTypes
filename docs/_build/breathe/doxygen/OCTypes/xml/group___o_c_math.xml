<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___o_c_math" kind="group">
    <compoundname>OCMath</compoundname>
    <title>OCMath</title>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___o_c_math_1ga84e20d3efaac1d5480380185590904cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double cargument</definition>
        <argsstring>(double complex z)</argsstring>
        <name>cargument</name>
        <param>
          <type>double complex</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: cargument :brief: Calculates the argument (or phase) of a complex number. :param z: The complex number. :return: The argument of z in radians. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="25" column="8" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="25" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga367869bcdfabf7e0ba51cea0e48f051e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex ccbrt</definition>
        <argsstring>(double complex z)</argsstring>
        <name>ccbrt</name>
        <param>
          <type>double complex</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: ccbrt :brief: Calculates the principal complex cube root of a complex number. :param z: The complex number. :return: The principal complex cube root of z. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="33" column="16" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="33" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1gaad866266dc5223508682cc813abedc45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex cqtrt</definition>
        <argsstring>(double complex z)</argsstring>
        <name>cqtrt</name>
        <param>
          <type>double complex</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: cqtrt :brief: Calculates the principal complex fourth root of a complex number. :param z: The complex number. :return: The principal complex fourth root of z. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="41" column="16" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="41" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga8b4a87c560fee7b0c00a009f8b16b0f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref></type>
        <definition>OCComparisonResult OCCompareFloatValues</definition>
        <argsstring>(float value, float otherValue)</argsstring>
        <name>OCCompareFloatValues</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>otherValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCCompareFloatValues :brief: Compares two float values. :param value: The first float value. :param otherValue: The second float value. :return: kOCCompareLessThan if value &lt; otherValue, kOCCompareEqualTo if value == otherValue, kOCCompareGreaterThan if value &gt; otherValue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="52" column="20" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="52" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga3c1134855335dd65c652b8a6420f28e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref></type>
        <definition>OCComparisonResult OCCompareDoubleValues</definition>
        <argsstring>(double value, double otherValue)</argsstring>
        <name>OCCompareDoubleValues</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>otherValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCCompareDoubleValues :brief: Compares two double values. :param value: The first double value. :param otherValue: The second double value. :return: kOCCompareLessThan if value &lt; otherValue, kOCCompareEqualTo if value == otherValue, kOCCompareGreaterThan if value &gt; otherValue. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="63" column="20" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="63" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga162ecc592aadc86283648b2d47257e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref></type>
        <definition>OCComparisonResult OCCompareDoubleValuesLoose</definition>
        <argsstring>(double value, double otherValue)</argsstring>
        <name>OCCompareDoubleValuesLoose</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>otherValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCCompareDoubleValuesLoose :brief: Compares two double values with a tolerance (loose comparison). :param value: The first double value. :param otherValue: The second double value. :return: kOCCompareEqualTo if the absolute difference is within a small epsilon, otherwise the result of a direct comparison. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="73" column="20" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="73" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1gaec5e5a945fb850212494ccf77b1291c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_library_1ga395ff068e826f2b8cdaab226094399c8" kindref="member">OCComparisonResult</ref></type>
        <definition>OCComparisonResult OCCompareFloatValuesLoose</definition>
        <argsstring>(float value, float otherValue)</argsstring>
        <name>OCCompareFloatValuesLoose</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>float</type>
          <declname>otherValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCCompareFloatValuesLoose :brief: Compares two float values with a tolerance (loose comparison). :param value: The first float value. :param otherValue: The second float value. :return: kOCCompareEqualTo if the absolute difference is within a small epsilon, otherwise the result of a direct comparison. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="83" column="20" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="83" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1gad912fb04ad72b439b498f5f472ea5407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OCDoubleFloor</definition>
        <argsstring>(double value)</argsstring>
        <name>OCDoubleFloor</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDoubleFloor :brief: Computes the floor of a double value. :param value: The double value. :return: The largest integer value not greater than value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="91" column="8" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="91" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga7d88e9028d420adcf8539cbb81e9a3fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double OCDoubleCeil</definition>
        <argsstring>(double value)</argsstring>
        <name>OCDoubleCeil</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDoubleCeil :brief: Computes the ceiling of a double value. :param value: The double value. :return: The smallest integer value not less than value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="99" column="8" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="99" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1gaedf6e3f289161b6eb84655ca86cd8055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex complex_sine</definition>
        <argsstring>(double complex angle)</argsstring>
        <name>complex_sine</name>
        <param>
          <type>double complex</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: complex_sine :brief: Calculates the complex sine of a complex angle. :param angle: The complex angle in radians. :return: The complex sine of the angle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="107" column="16" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="107" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1gadf0c6a393fe423d6366f5d233bb885f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex complex_cosine</definition>
        <argsstring>(double complex angle)</argsstring>
        <name>complex_cosine</name>
        <param>
          <type>double complex</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: complex_cosine :brief: Calculates the complex cosine of a complex angle. :param angle: The complex angle in radians. :return: The complex cosine of the angle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="115" column="16" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="115" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_math_1ga682278e8fa0b5a1225b373d708827973" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double complex</type>
        <definition>double complex complex_tangent</definition>
        <argsstring>(double complex angle)</argsstring>
        <name>complex_tangent</name>
        <param>
          <type>double complex</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: complex_tangent :brief: Calculates the complex tangent of a complex angle. :param angle: The complex angle in radians. :return: The complex tangent of the angle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCMath.h" line="123" column="16" declfile="/Users/philip/Github/Software/OCTypes/src/OCMath.h" declline="123" declcolumn="16"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
