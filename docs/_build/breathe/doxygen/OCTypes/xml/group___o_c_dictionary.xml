<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group___o_c_dictionary" kind="group">
    <compoundname>OCDictionary</compoundname>
    <title>OCDictionary</title>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" prot="public" static="no">
        <type>const struct __OCDictionary *</type>
        <definition>typedef const struct __OCDictionary* OCDictionaryRef</definition>
        <argsstring></argsstring>
        <name>OCDictionaryRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>.. _OCDictionary_h:</para>
<sect1 id="group___o_c_dictionary_1autotoc_md8">
<title>OCDictionary.h</title><para>Defines the <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> and <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> types and related functions for managing collections of key-value pairs.</para>
<para>Dictionaries store associations between keys (<ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref>) and values (generic pointers). Keys are unique. Values can be any OCType object or other data. The dictionary retains its keys and values according to OCType memory management rules if they are OCType objects. For non-OCType values, the client is responsible for managing their lifecycle. :type <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref>: :brief: An opaque reference to an immutable dictionary object.</para>
<para><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> represents a dictionary whose contents cannot be changed after creation. Operations on an <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> are read-only. </para>
</sect1>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="46" column="36" bodyfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" prot="public" static="no">
        <type>struct __OCDictionary *</type>
        <definition>typedef struct __OCDictionary* OCMutableDictionaryRef</definition>
        <argsstring></argsstring>
        <name>OCMutableDictionaryRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:type <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref>: :brief: An opaque reference to a mutable dictionary object.</para>
<para><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> represents a dictionary whose contents can be modified by adding, removing, or replacing key-value pairs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="55" column="30" bodyfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group___o_c_dictionary_1gafd5dc6c3e55e6caf5924a7496e9e3ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref></type>
        <definition>OCTypeID OCDictionaryGetTypeID</definition>
        <argsstring>(void)</argsstring>
        <name>OCDictionaryGetTypeID</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryGetTypeID :brief: Returns the unique type identifier for the OCDictionary class. :return: The <ref refid="group___o_c_type_1gae4fcca725e41e7af4659ba4902223981" kindref="member">OCTypeID</ref> associated with OCDictionary objects. This ID is used to identify OCDictionary instances within the OCTypes type system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="63" column="10" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="63" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga4cff6e7bcd69532df96355d1fe0e35c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
        <definition>OCMutableDictionaryRef OCDictionaryCreateMutable</definition>
        <argsstring>(uint64_t capacity)</argsstring>
        <name>OCDictionaryCreateMutable</name>
        <param>
          <type>uint64_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryCreateMutable :brief: Creates a new, empty, mutable dictionary with a specified initial capacity. :param capacity: The initial number of key-value pairs the dictionary can store without needing to resize its internal storage. A capacity of 0 is valid. :return: A new <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> object, or NULL if creation fails (e.g., memory allocation failure). The caller is responsible for releasing the returned object using OCRelease. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="73" column="24" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="73" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga96b8d9d1addb6dbe23cb9194d7cca4cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
        <definition>OCDictionaryRef OCDictionaryCreateCopy</definition>
        <argsstring>(OCDictionaryRef theDictionary)</argsstring>
        <name>OCDictionaryCreateCopy</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryCreateCopy :brief: Creates a new immutable dictionary by copying an existing dictionary. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to copy. If NULL, the behavior is undefined or may result in NULL. :return: A new <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> object that is an immutable copy of <computeroutput>theDictionary</computeroutput>, or NULL if <computeroutput>theDictionary</computeroutput> is NULL or if creation fails. The caller is responsible for releasing the returned object using OCRelease. The copy is a shallow copy of the keys and values; they are retained, not deeply copied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="84" column="17" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="84" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga3e49d8746bb109d8fad49c9c4a57109a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
        <definition>OCMutableDictionaryRef OCDictionaryCreateMutableCopy</definition>
        <argsstring>(OCDictionaryRef theDictionary)</argsstring>
        <name>OCDictionaryCreateMutableCopy</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryCreateMutableCopy :brief: Creates a new mutable dictionary by copying an existing dictionary. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to copy. If NULL, the behavior is undefined or may result in NULL. :return: A new <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> object that is a mutable copy of <computeroutput>theDictionary</computeroutput>, or NULL if <computeroutput>theDictionary</computeroutput> is NULL or if creation fails. The caller is responsible for releasing the returned object using OCRelease. The copy is a shallow copy of the keys and values; they are retained, not deeply copied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="95" column="24" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="95" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga8ed87aa17072e8099b3ad40a69ee47ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t OCDictionaryGetCount</definition>
        <argsstring>(OCDictionaryRef theDictionary)</argsstring>
        <name>OCDictionaryGetCount</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryGetCount :brief: Returns the number of key-value pairs currently stored in the dictionary. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :return: The count of key-value pairs in the dictionary. Returns 0 if <computeroutput>theDictionary</computeroutput> is NULL or empty. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="103" column="10" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="103" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga14954a4cc6e33d4a5376d0eae232a4b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void * OCDictionaryGetValue</definition>
        <argsstring>(OCDictionaryRef theDictionary, OCStringRef key)</argsstring>
        <name>OCDictionaryGetValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryGetValue :brief: Retrieves the value associated with a specific key in the dictionary. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key whose associated value is to be retrieved. Must not be NULL. :return: A pointer to the value associated with <computeroutput>key</computeroutput>, or NULL if the key is not found or if <computeroutput>theDictionary</computeroutput> or <computeroutput>key</computeroutput> is NULL. The returned value is a borrowed reference and should not be released by the caller unless explicitly retained. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="114" column="13" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="114" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga4b75ce767832960f198d99067df78bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OCDictionaryContainsKey</definition>
        <argsstring>(OCDictionaryRef theDictionary, OCStringRef key)</argsstring>
        <name>OCDictionaryContainsKey</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryContainsKey :brief: Checks if the dictionary contains a key-value pair for the specified key. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key to check for. Must not be NULL. :return: <computeroutput>true</computeroutput> if the dictionary contains the key, <computeroutput>false</computeroutput> otherwise or if <computeroutput>theDictionary</computeroutput> or <computeroutput>key</computeroutput> is NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="123" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1gaa3fdeb2856a793f706d5a7043d27d50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool OCDictionaryContainsValue</definition>
        <argsstring>(OCDictionaryRef theDictionary, const void *value)</argsstring>
        <name>OCDictionaryContainsValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryContainsValue :brief: Checks if the dictionary contains the specified value. :details: This operation can be expensive as it may require iterating through all values in the dictionary and comparing them. The comparison is done by pointer equality unless the dictionary is configured with custom callbacks that define value equality. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :param value: The value to search for. :return: <computeroutput>true</computeroutput> if the dictionary contains one or more instances of the value, <computeroutput>false</computeroutput> otherwise or if <computeroutput>theDictionary</computeroutput> is NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="136" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="136" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1gae1e0ea2c05c3bd1502813ef217dbe96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OCDictionaryAddValue</definition>
        <argsstring>(OCMutableDictionaryRef theDictionary, OCStringRef key, const void *value)</argsstring>
        <name>OCDictionaryAddValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryAddValue :brief: Adds a key-value pair to a mutable dictionary. :details: If the key already exists in the dictionary, its associated value is replaced with the new value. The dictionary retains the key and the value if they are OCType objects. :param theDictionary: The <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> to modify. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key to add. Must not be NULL. The dictionary will retain this key. :param value: The value to associate with the key. The dictionary will retain this value if it&apos;s an OCType. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="147" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="147" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1gab328fd4e26c74ea88d96e97f86745b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OCDictionarySetValue</definition>
        <argsstring>(OCMutableDictionaryRef theDictionary, OCStringRef key, const void *value)</argsstring>
        <name>OCDictionarySetValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionarySetValue :brief: Sets or replaces the value for a given key in a mutable dictionary. :details: This function is an alias for OCDictionaryAddValue. If the key already exists, its value is replaced. If the key does not exist, a new key-value pair is added. The dictionary retains the key and the value if they are OCType objects. :param theDictionary: The <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> to modify. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key. Must not be NULL. The dictionary will retain this key. :param value: The new value to set for the key. The dictionary will retain this value if it&apos;s an OCType. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="159" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga336c8359fbf8f0ea42f0224a43620e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OCDictionaryReplaceValue</definition>
        <argsstring>(OCMutableDictionaryRef theDictionary, OCStringRef key, const void *value)</argsstring>
        <name>OCDictionaryReplaceValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryReplaceValue :brief: Replaces the value associated with a given key in a mutable dictionary. :details: If the key does not exist in the dictionary, this function does nothing. If the key exists, its current value is released (if it&apos;s an OCType) and replaced with the new value, which is then retained (if it&apos;s an OCType). :param theDictionary: The <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> to modify. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key whose value is to be replaced. Must not be NULL. :param value: The new value to associate with the key. The dictionary will retain this value if it&apos;s an OCType. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="171" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="171" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1gad8c8c16895fe5f027022dd7d49371f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OCDictionaryRemoveValue</definition>
        <argsstring>(OCMutableDictionaryRef theDictionary, OCStringRef key)</argsstring>
        <name>OCDictionaryRemoveValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type><ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref></type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryRemoveValue :brief: Removes a key-value pair from a mutable dictionary, identified by the key. :details: If the key is found, the key and its associated value are removed. The key and value are released if they are OCType objects. If the key is not found, the dictionary remains unchanged. :param theDictionary: The <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> to modify. Must not be NULL. :param key: The <ref refid="group___o_c_string_1ga34a97bf2ed10637e698c2cd3faa193d4" kindref="member">OCStringRef</ref> key of the entry to remove. Must not be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="182" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1gab262835ddfd52d604acf688f8e98bd34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t OCDictionaryGetCountOfValue</definition>
        <argsstring>(OCMutableDictionaryRef theDictionary, const void *value)</argsstring>
        <name>OCDictionaryGetCountOfValue</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryGetCountOfValue :brief: Counts the number of times a specific value appears in the dictionary. :details: This operation can be expensive as it requires iterating through all values. Comparison is by pointer equality unless custom callbacks are used. :param theDictionary: The <ref refid="group___o_c_dictionary_1ga19045ab0d11ee2e868fdef402778e539" kindref="member">OCMutableDictionaryRef</ref> (or <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref>, as it&apos;s a read operation) to query. Must not be NULL. :param value: The value to count. :return: The number of key-value pairs in the dictionary that have the specified value. Returns 0 if <computeroutput>theDictionary</computeroutput> is NULL or the value is not found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="194" column="10" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="194" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga3b725d5b5bb2da3a5161c8ff5fbb7f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void OCDictionaryGetKeysAndValues</definition>
        <argsstring>(OCDictionaryRef theDictionary, const void **keys, const void **values)</argsstring>
        <name>OCDictionaryGetKeysAndValues</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryGetKeysAndValues :brief: Retrieves all keys and their corresponding values from the dictionary into two parallel C arrays. :details: The <computeroutput>keys</computeroutput> and <computeroutput>values</computeroutput> arrays must be pre-allocated by the caller and be large enough to hold all entries from the dictionary (i.e., size of <ref refid="group___o_c_dictionary_1ga8ed87aa17072e8099b3ad40a69ee47ef" kindref="member">OCDictionaryGetCount()</ref>). The order of keys and values in the output arrays is not guaranteed. The retrieved keys and values are borrowed references. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :param keys: A C array (pointer to const void *) to be filled with pointers to the keys. Must not be NULL. :param values: A C array (pointer to const void *) to be filled with pointers to the values. Must not be NULL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="207" column="6" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="207" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga91ca42e27f0f16784890b06105d8de11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref></type>
        <definition>OCArrayRef OCDictionaryCreateArrayWithAllKeys</definition>
        <argsstring>(OCDictionaryRef theDictionary)</argsstring>
        <name>OCDictionaryCreateArrayWithAllKeys</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryCreateArrayWithAllKeys :brief: Creates a new <ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref> containing all the keys from the dictionary. :details: The order of keys in the array is not guaranteed. The keys in the array are retained by the array. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :return: A new <ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref> containing all keys from the dictionary, or NULL if <computeroutput>theDictionary</computeroutput> is NULL or if creation fails. The caller is responsible for releasing the returned array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="218" column="12" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="218" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group___o_c_dictionary_1ga7b3cb3c2e7e423d482487ebebb51bcce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref></type>
        <definition>OCArrayRef OCDictionaryCreateArrayWithAllValues</definition>
        <argsstring>(OCDictionaryRef theDictionary)</argsstring>
        <name>OCDictionaryCreateArrayWithAllValues</name>
        <param>
          <type><ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref></type>
          <declname>theDictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>:func: OCDictionaryCreateArrayWithAllValues :brief: Creates a new <ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref> containing all the values from the dictionary. :details: The order of values in the array corresponds to the order of keys if OCDictionaryCreateArrayWithAllKeys were called simultaneously, but this order is not guaranteed. The values in the array are retained by the array. :param theDictionary: The <ref refid="group___o_c_dictionary_1gaa6826a3d2e9e148e7bbc4df333300257" kindref="member">OCDictionaryRef</ref> to query. Must not be NULL. :return: A new <ref refid="group___o_c_array_1ga258ada3c18aefb7cd00f9fae05441cc9" kindref="member">OCArrayRef</ref> containing all values from the dictionary, or NULL if <computeroutput>theDictionary</computeroutput> is NULL or if creation fails. The caller is responsible for releasing the returned array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" line="230" column="12" declfile="/Users/philip/Github/Software/OCTypes/src/OCDictionary.h" declline="230" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
